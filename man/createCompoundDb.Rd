% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createCompoundDbPackage.R
\name{createCompoundDb}
\alias{createCompoundDb}
\alias{createCompoundDbPackage}
\title{Create a CompoundDb database}
\usage{
createCompoundDb(x, metadata, path = ".")

createCompoundDbPackage(x, version, maintainer, author, path = ".",
  license = "Artistic-2.0")
}
\arguments{
\item{x}{For \code{createCompoundDb}: \code{data.frame} or \code{tbl} with the compound
annotations. See description for details.\preformatted{For `createCompoundDbPackage`: `character(1)` with the file name of the
`CompoundDb` SQLite file (created by `createCompoundDb`).
}}

\item{metadata}{For \code{createCompoundDb}: \code{data.frame} with metadata
information. See description for details.}

\item{path}{\code{character(1)} with the path to the directory where the database
file or package folder should be written. Defaults to the current
directory.}

\item{version}{For \code{createCompoundDbPackage}: \code{character(1)} with the version
of the package (ideally in the format \code{"x.y.z"}).}

\item{maintainer}{For \code{createCompoundDbPackage}: \code{character(1)} with the
name and email address of the package maintainer (in the form
\code{"First Last <first.last@provider.com>"}.}

\item{author}{For \code{createCompoundDbPackage}: \code{character(1)} with the name
of the package author.}

\item{license}{For \code{createCompoundDbPackage}: \code{character(1)} with the
license of the package respectively the originating provider.}
}
\value{
For \code{createCompoundDb}: a \code{character(1)} with the database name
(invisibly).
}
\description{
\code{createCompoundDb} creates a \code{SQLite}-based \code{\link{CompoundDb}} object/database
from a compound resource provided as a \code{data.frame} or \code{tbl}.
An additional \code{data.frame} providing metadata information is mandatory.
Required columns for the \code{data.frame} providing the compound information are:
\itemize{
\item \code{"id"}: the ID of the compound (e.g. an HMDB ID).
\item \code{"name"}: the compound's name.
\item \code{"inchi"}: the inchi of the compound.
\item \code{"formula"}: the chemical formula.
\item \code{"mass"}: the compound's mass.
}

See e.g. \code{\link[=generate_hmdb_tbl]{generate_hmdb_tbl()}} or \code{\link[=generate_lipidblast_tbl]{generate_lipidblast_tbl()}} for functions
creating such compound tables.

The metadata \code{data.frame} is supposed to have two columns named \code{"name"} and
\code{"value"} providing the following minimal information as key-value pairs:
\itemize{
\item \code{"source"}: the source from which the data was retrieved (e.g. \code{"HMDB"}).
\item \code{"url"}: the url from which the original data was retrieved.
\item \code{"source_version"}: the version from the original data source
(e.g. \code{"v4"}).
\item \code{"source_date"}: the date when the original data source was generated.
\item \code{"organism"}: the organism. Should be in the form \code{"Hsapiens"} or
\code{"Mmusculus"}.
}

\code{createCompoundDbPackage} creates an R data package with the data from a
\code{\link{CompoundDb}} object.
}
\details{
Metadata information is also used to create the file name for the database
file. The name starts with \code{"CompoundDb"}, followed by the organism, the
data source and its version. A compound database file for HMDB version 4
with human metabolites will thus be named: \code{"CompoundDb.Hsapiens.HMDB.v4"}.
}
\examples{

## Read compounds for a HMDB subset
fl <- system.file("extdata/hmdb/hmdb_sub.xml", package = "PeakABro")
cmps <- generate_hmdb_tbl(fl)

## Create a metadata data.frame for the compounds.
metad <- data.frame(name = c("source", "url", "source_version",
    "source_date", "organism"), value = c("HMDB", "http://www.hmdb.ca",
    "v4", "2017-08-27", "Hsapiens"))

## Create a SQLite database in the temporary folder
db_f <- createCompoundDb(cmps, metadata = metad, path = tempdir())

## connect to the database and query it's tables using RSQlite
library(RSQLite)
con <- dbConnect(dbDriver("SQLite"), db_f)

dbGetQuery(con, "select * from metadata")
dbGetQuery(con, "select * from compound")

## To create a CompoundDb R-package we could simply use the
## createCompoundDb function on the SQLite database file name.
}
\author{
Johannes Rainer
}
